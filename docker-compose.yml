services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: lookatme-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: lookatme_cms
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - lookatme-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/lookatme_cms --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lookatme-backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://mongodb:27017
      - DB_NAME=lookatme_cms
      - CORS_ORIGINS=*
      - JWT_SECRET=lookatme-secret-key-change-in-production
      - GEMINI_API_KEY=AIzaSyA4xgtFgqHR-yEEB3d9iupH5dlC8DP1Dz8
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-}
      - TRIPADVISOR_API_KEY=${TRIPADVISOR_API_KEY:-}
      - FACEBOOK_ACCESS_TOKEN=${FACEBOOK_ACCESS_TOKEN:-}
      - INSTAGRAM_ACCESS_TOKEN=${INSTAGRAM_ACCESS_TOKEN:-}
      - EMERGENT_LLM_KEY=sk-emergent-a21572726F37c793c9
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lookatme-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
      args:
        - REACT_APP_BACKEND_URL=http://localhost:8001
    container_name: lookatme-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - lookatme-network

volumes:
  mongodb_data:
    driver: local

networks:
  lookatme-network:
    driver: bridge